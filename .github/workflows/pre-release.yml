name: Pre Release

on:
  push:
    branches:
      - main

jobs:
  test:
    uses: ./.github/workflows/test.yml
    with:
      runs-on: windows-latest
    permissions:
      contents: write
      id-token: write
      actions: write

  pre-release:
    runs-on: windows-latest
    environment: release
    needs: test
    permissions:
      contents: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch pyinstaller
        hatch env create

    - name: Extract version
      id: extract_version
      shell: bash
      run: |
        VERSION=$(grep -Eo '__version__\s*=\s*"[^"]+"' imxCli/__init__.py | cut -d'"' -f2)
        echo "version=$VERSION" >> $GITHUB_ENV

    - name: Fetch latest release version
      shell: bash
      run: |
        LATEST_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name | sed 's/^v//')
        echo "latest_version=$LATEST_VERSION" >> $GITHUB_ENV

    - name: Check version match
      shell: bash
      run: |
        if [ "${{ env.version }}" = "${{ env.latest_version }}" ]; then
          echo "match=true" >> $GITHUB_ENV
        else
          echo "match=false" >> $GITHUB_ENV
        fi

    - name: Build exe
      run: python build-cli-app.py
      if: env.match == 'false'

    - name: Upload release
      if: env.match == 'false'
      uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174
      with:
        draft: true
        name: ðŸš€ Version ${{ env.version }}
        tag: v${{ env.version }}
        generateReleaseNotes: true
        artifacts: dist/imxCli-${{ env.version }}-windows.exe
        token: ${{ secrets.GITHUB_TOKEN }}
